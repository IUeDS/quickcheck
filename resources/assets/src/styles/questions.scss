.qc-assessment-question {
    img {
        display: block; //make sure images go on their own line if included in question
    }
}

//make dropdowns inline with text and auto width instead of 100%
.qc-dropdown-section {
    select {
        display: inline-block;
        margin: 5px;
        width: auto;
    }
}

.qc-matching-options {
    .table {
        margin-left: 20px; //needs a bit of margin, otherwise it's right up against the left side of the window
        width: auto; //this doesn't need to be 100% width, which is the default
    }

    label {
        vertical-align: middle;
    }

    select {
        min-width: 150px;
    }

    .fa {
        margin-right: 10px; //extra spacing for incorrect X
    }
}

.qc-matrix-options {
    .form-check {
        padding-left: 0;
    }

    .table {
        max-width: 100%;
        min-width: 50%;
        width: auto;
    }

    input {
        /* MM, 4/7/20: changed to radio, but keeping this style here in case we change it back later */
        &[type='checkbox'] {
            display: inline-block;
            margin-left: 0;
            position: relative;
        }
    }

    .fa {
        margin-right: 10px; //extra spacing for incorrect X
    }

    .qc-matrix-row-content {
        vertical-align: middle;
    }
}

//since multiple choice/correct/matrix options need to have the input outside
//of the label for optimal accessibility, even though that is not the
//way that bootstrap recommends you do it, need to add extra styles
.qc-mc-options,
.qc-mcorrect-options {
    input {
        &[type='checkbox'],
        &[type='radio'] {
            margin-left: 0;
            margin-top: 8px;
            padding-left: 20px;
        }
    }
}

.qc-mc-options {
    label {
        padding-left: 25px;
    }
}

.qc-mcorrect-options {
    label {
        padding-left: 10px;
    }
}

//for matching and dropdowns
.qc-selectable-answer-option {
    display: inline-block;
    font-size: 12px;
    margin: 0 20px 20px 0;
    padding: 10px;
}

.qc-selectable-answer-option-text {
    display: inline-block;
    padding-right: 20px;
}

//drag and drop
.qc-droppable-zone {
    position: absolute;
    z-index: 10;
}

.qc-draggable-text {
    padding: 5px;
}

.qc-droppable-base-img {
    z-index: 1;
    margin-bottom: 50px;
}

.qc-droppable-container {
    position: relative;
    //NOTE: this is essential to ensure droppables have correct positioning;
    //the CANVAS_PADDING value when editing a drag and drop is set to 200,
    //which adds 200px to width/height. If that value changes in the future,
    //then this value also needs to be updated to be half of that. Hopefully
    //won't need to update it, but if it becomes an issue, we could possibly
    //find a way to centralize the value in a js config file and use ngStyle.
    //Additionally, adding padding changes the positioning of all of the droppable
    //locations, so it would require either DB or js updates as well for all the questions
    //(i.e., if 100px of padding added, then +50 for top/left for all saved locations).
    padding: 100px; 
}

.qc-drag-question {
    margin-left: 50px;
}

.qc-draggable {
    margin-bottom: 20px;
}

.qc-dropped-option-container {
    position: relative;
}

.qc-dropped-option {
    z-index: 50;
}

//center images but not text, which lines up without additional styles 
img.qc-dropped-option {
    //center vertically and horizontally
    position: relative;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
}
